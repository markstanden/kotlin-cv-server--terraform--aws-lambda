package dev.markstanden


import com.amazonaws.services.lambda.runtime.Context
import com.amazonaws.services.lambda.runtime.RequestHandler
import com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPEvent
import com.amazonaws.services.lambda.runtime.events.APIGatewayV2HTTPResponse


class Application : RequestHandler<APIGatewayV2HTTPEvent, APIGatewayV2HTTPResponse> {

	override fun handleRequest(input: APIGatewayV2HTTPEvent?, context: Context?): APIGatewayV2HTTPResponse {
		val log = context?.logger

		val path = input?.rawPath ?: "/"
		log?.log(input?.body ?: "nobody")
		log?.log(path)

		val response = APIGatewayV2HTTPResponse()
		response.isBase64Encoded = false
		response.statusCode = 200

		val headers = HashMap<String, String>()
		headers["Content-Type"] = "text/html"
		response.headers = headers
		response.body = "<!DOCTYPE html><html><head><title>AWS Lambda sample</title></head><body>" +
			"<h1>Welcome $path /h1><p>Page generated by a Lambda function.</p>" +
			"<p>Raw Path: ${input?.rawPath}</p>" +
			"<p>requestContext: ${input?.requestContext}</p>" +
			"<p>Raw Query String: ${input?.rawQueryString}</p>" +
			"<p>Stage: ${input?.requestContext?.stage}</p>" +
			"<p>path: ${input?.requestContext?.http?.path}</p>" +
			"<p>ip: ${input?.requestContext?.http?.sourceIp}</p>" +
			"</body></html>"
		return response
	}
}